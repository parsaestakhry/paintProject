/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package testpaint;

import java.awt.Color;
import java.util.ArrayList;
import paintAbstract.*;

/**
 *
 * @author Sajjad
 */
public class MyPaint extends javax.swing.JFrame {

    ShapeTypes curShape = ShapeTypes.Line;
    ActionType curAction = ActionType.Draw;
    Color curBorderColor = Color.MAGENTA;
    Color curFillColor = Color.cyan;
    Point p1, p2, p3;
    ArrayList<Point> pArr;
    PaintingArea myArea;

    /**
     * Creates new form MyPaint
     */
    public MyPaint() {
        initComponents();
        myArea = new PaintingArea(paintPanel.getGraphics(), paintPanel.getWidth(), paintPanel.getHeight());
        pArr = new ArrayList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        paintPanel = new javax.swing.JPanel();
        btnLine = new javax.swing.JButton();
        btnRect = new javax.swing.JButton();
        btnCircle = new javax.swing.JButton();
        btnMove = new javax.swing.JButton();
        btnErase = new javax.swing.JButton();
        chbIsFill = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        paintPanel.setBackground(new java.awt.Color(255, 255, 255));
        paintPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                paintPanelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout paintPanelLayout = new javax.swing.GroupLayout(paintPanel);
        paintPanel.setLayout(paintPanelLayout);
        paintPanelLayout.setHorizontalGroup(
            paintPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 676, Short.MAX_VALUE)
        );
        paintPanelLayout.setVerticalGroup(
            paintPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        btnLine.setText("Line");
        btnLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLineActionPerformed(evt);
            }
        });

        btnRect.setText("Rectangle");
        btnRect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRectActionPerformed(evt);
            }
        });

        btnCircle.setText("Circle");
        btnCircle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCircleActionPerformed(evt);
            }
        });

        btnMove.setText("Move");
        btnMove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoveActionPerformed(evt);
            }
        });

        btnErase.setText("Erase");
        btnErase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEraseActionPerformed(evt);
            }
        });

        chbIsFill.setText("Is Filled?");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRect)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(btnLine))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnCircle)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnErase)
                                .addComponent(btnMove)
                                .addComponent(chbIsFill)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(paintPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(paintPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(btnLine)
                .addGap(18, 18, 18)
                .addComponent(btnRect)
                .addGap(18, 18, 18)
                .addComponent(btnCircle)
                .addGap(120, 120, 120)
                .addComponent(btnMove)
                .addGap(27, 27, 27)
                .addComponent(btnErase)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addComponent(chbIsFill)
                .addGap(42, 42, 42))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLineActionPerformed
        curAction = ActionType.Draw;
        curShape = ShapeTypes.Line;
        p1 = p2 = p3 = null;
        pArr.clear();
    }//GEN-LAST:event_btnLineActionPerformed

    private void paintPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paintPanelMouseClicked
        switch (curAction) {
            case Draw:
                switch (curShape) {
                    case Line:
                        if (p1 == null) {
                            p1 = new Point(evt.getX(), evt.getY());
                        } else {
                            p2 = new Point(evt.getX(), evt.getY());
                            Line l = new Line(p1, p2, curBorderColor);
                            myArea.addShape(l);

                            p1 = p2 = null;
                        }
                        break;
                    case Rectangle:
                        if (p1 == null) {
                            p1 = new Point(evt.getX(), evt.getY());
                        } else {
                            p2 = new Point(evt.getX(), evt.getY());
                            Rectangle r = new Rectangle(p1, p2, curBorderColor, curFillColor);
                            r.isFilled = chbIsFill.isSelected();
                            myArea.addShape(r);

                            p1 = p2 = null;
                        }
                        break;
                    case Circle:
                        if (p1 == null) {
                            p1 = new Point(evt.getX(), evt.getY());
                        } else {
                            p2 = new Point(evt.getX(), evt.getY());
                            Circle c = new Circle(p1, (int) p1.distance(p2), curBorderColor, curFillColor);
                            c.isFilled = chbIsFill.isSelected();
                            myArea.addShape(c);

                            p1 = p2 = null;
                        }
                        break;

                    case Square:

                        break;
                    case Oval:

                        break;
                    case Triangle:

                        break;
                    case Polygone:

//                        pArr.clear();
                        break;
                }
                break;
            case Move:
                if (p1 == null) {
                    p1 = new Point(evt.getX(), evt.getY());
                } else {
                    p2 = new Point(evt.getX(), evt.getY());
                    myArea.moveShape(p1, p2.getX() - p1.getX(), p2.getY() - p1.getY());
                    p1 = p2 = null;
                }
                break;
            case Erase:
                p1 = new Point(evt.getX(), evt.getY());
                Shape s = myArea.getShapeByPoint(p1);
                if (s != null) {
                    myArea.removeShape(myArea.indexOf(s));
                    myArea.reDrawAll();
                }

                break;
            case ZoomIn:
                break;
            case ZoomOut:
                break;

        }

    }//GEN-LAST:event_paintPanelMouseClicked

    private void btnRectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRectActionPerformed
        curAction = ActionType.Draw;
        curShape = ShapeTypes.Rectangle;
        p1 = p2 = p3 = null;
        pArr.clear();
    }//GEN-LAST:event_btnRectActionPerformed

    private void btnCircleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCircleActionPerformed
        curAction = ActionType.Draw;
        curShape = ShapeTypes.Circle;
        p1 = p2 = p3 = null;
        pArr.clear();
    }//GEN-LAST:event_btnCircleActionPerformed

    private void btnMoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoveActionPerformed
        curAction = ActionType.Move;
        pArr.clear();
        p1 = p2 = p3 = null;
    }//GEN-LAST:event_btnMoveActionPerformed

    private void btnEraseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEraseActionPerformed
        curAction = ActionType.Erase;
        pArr.clear();
        p1 = p2 = p3 = null;
    }//GEN-LAST:event_btnEraseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyPaint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyPaint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyPaint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyPaint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyPaint().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCircle;
    private javax.swing.JButton btnErase;
    private javax.swing.JButton btnLine;
    private javax.swing.JButton btnMove;
    private javax.swing.JButton btnRect;
    private javax.swing.JCheckBox chbIsFill;
    private javax.swing.JPanel paintPanel;
    // End of variables declaration//GEN-END:variables
}

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package paintAbstract.testPaint;

import java.awt.Color;
import java.awt.event.*;
import java.util.ArrayList;
import javax.swing.*;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle;
import paintAbstract.*;

/**
 *
 * @author Sajjad
 */
public class MyPaint extends javax.swing.JFrame {

    ShapeTypes curShape = ShapeTypes.Line;
    ActionType curAction = ActionType.Draw;
    Color curBorderColor = Color.MAGENTA;
    Color curFillColor = Color.cyan;
    Point p1, p2, p3;
    ArrayList<Point> pArr;
    PaintingArea myArea;

    /**
     * Creates new form MyPaint
     */
    public MyPaint() {
        initComponents();
        myArea = new PaintingArea(paintPanel.getGraphics(), paintPanel.getWidth(), paintPanel.getHeight());
        pArr = new ArrayList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    // Generated using JFormDesigner Evaluation license - Parsa Es
    private void initComponents() {
        paintPanel = new JPanel();
        btnLine = new JButton();
        btnRect = new JButton();
        btnCircle = new JButton();
        btnMove = new JButton();
        btnErase = new JButton();
        chbIsFill = new JCheckBox();
        button1 = new JButton();
        button2 = new JButton();
        button3 = new JButton();
        button4 = new JButton();
        button5 = new JButton();
        button6 = new JButton();

        //======== this ========
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        var contentPane = getContentPane();

        //======== paintPanel ========
        {
            paintPanel.setBackground(Color.white);
            paintPanel.addMouseListener(new MouseAdapter() {
                @Override
                public void mouseClicked(MouseEvent e) {
                    paintPanelMouseClicked(e);
                }
            });
            paintPanel.setBorder (new javax. swing. border. CompoundBorder( new javax .swing .border .TitledBorder (new javax
            . swing. border. EmptyBorder( 0, 0, 0, 0) , "JF\u006frm\u0044es\u0069gn\u0065r \u0045va\u006cua\u0074io\u006e", javax. swing
            . border. TitledBorder. CENTER, javax. swing. border. TitledBorder. BOTTOM, new java .awt .
            Font ("D\u0069al\u006fg" ,java .awt .Font .BOLD ,12 ), java. awt. Color. red
            ) ,paintPanel. getBorder( )) ); paintPanel. addPropertyChangeListener (new java. beans. PropertyChangeListener( ){ @Override
            public void propertyChange (java .beans .PropertyChangeEvent e) {if ("\u0062or\u0064er" .equals (e .getPropertyName (
            ) )) throw new RuntimeException( ); }} );

            GroupLayout paintPanelLayout = new GroupLayout(paintPanel);
            paintPanel.setLayout(paintPanelLayout);
            paintPanelLayout.setHorizontalGroup(
                paintPanelLayout.createParallelGroup()
                    .addGap(0, 688, Short.MAX_VALUE)
            );
            paintPanelLayout.setVerticalGroup(
                paintPanelLayout.createParallelGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
            );
        }

        //---- btnLine ----
        btnLine.setText("Line");
        btnLine.addActionListener(e -> btnLineActionPerformed(e));

        //---- btnRect ----
        btnRect.setText("Rectangle");
        btnRect.addActionListener(e -> btnRectActionPerformed(e));

        //---- btnCircle ----
        btnCircle.setText("Circle");
        btnCircle.addActionListener(e -> btnCircleActionPerformed(e));

        //---- btnMove ----
        btnMove.setText("Move");
        btnMove.addActionListener(e -> btnMoveActionPerformed(e));

        //---- btnErase ----
        btnErase.setText("Erase");
        btnErase.addActionListener(e -> btnEraseActionPerformed(e));

        //---- chbIsFill ----
        chbIsFill.setText("Is Filled?");

        //---- button1 ----
        button1.setText("Triangle");

        //---- button2 ----
        button2.setText("Oval");

        //---- button3 ----
        button3.setText("Polygon");

        //---- button4 ----
        button4.setText("Square");

        //---- button5 ----
        button5.setText("zoomOut");

        //---- button6 ----
        button6.setText("zoomIn");

        GroupLayout contentPaneLayout = new GroupLayout(contentPane);
        contentPane.setLayout(contentPaneLayout);
        contentPaneLayout.setHorizontalGroup(
            contentPaneLayout.createParallelGroup()
                .addGroup(GroupLayout.Alignment.TRAILING, contentPaneLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(contentPaneLayout.createParallelGroup()
                        .addComponent(btnLine)
                        .addComponent(btnRect, GroupLayout.PREFERRED_SIZE, 78, GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnCircle)
                        .addComponent(btnMove)
                        .addComponent(chbIsFill)
                        .addComponent(btnErase)
                        .addComponent(button1)
                        .addComponent(button2)
                        .addComponent(button3)
                        .addComponent(button4)
                        .addComponent(button5)
                        .addComponent(button6))
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(paintPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        contentPaneLayout.setVerticalGroup(
            contentPaneLayout.createParallelGroup()
                .addGroup(contentPaneLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(btnLine)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnRect)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnCircle)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(button1)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(button2)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(button3)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(button4)
                    .addGap(30, 30, 30)
                    .addComponent(button6)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(button5)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnMove)
                    .addGap(18, 18, 18)
                    .addComponent(btnErase)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chbIsFill)
                    .addGap(47, 47, 47))
                .addComponent(paintPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pack();
        setLocationRelativeTo(getOwner());
    }// </editor-fold>//GEN-END:initComponents

    private void btnLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLineActionPerformed
        curAction = ActionType.Draw;
        curShape = ShapeTypes.Line;
        p1 = p2 = p3 = null;
        pArr.clear();
    }//GEN-LAST:event_btnLineActionPerformed

    private void paintPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paintPanelMouseClicked
        switch (curAction) {
            case Draw:
                switch (curShape) {
                    case Line:
                        if (p1 == null) {
                            p1 = new Point(evt.getX(), evt.getY());
                        } else {
                            p2 = new Point(evt.getX(), evt.getY());
                            Line l = new Line(p1, p2, curBorderColor);
                            myArea.addShape(l);

                            p1 = p2 = null;
                        }
                        break;
                    case Rectangle:
                        if (p1 == null) {
                            p1 = new Point(evt.getX(), evt.getY());
                        } else {
                            p2 = new Point(evt.getX(), evt.getY());
                            Rectangle r = new Rectangle(p1, p2, curBorderColor, curFillColor);
                            r.isFilled = chbIsFill.isSelected();
                            myArea.addShape(r);

                            p1 = p2 = null;
                        }
                        break;
                    case Circle:
                        if (p1 == null) {
                            p1 = new Point(evt.getX(), evt.getY());
                        } else {
                            p2 = new Point(evt.getX(), evt.getY());
                            Circle c = new Circle(p1, (int) p1.distance(p2), curBorderColor, curFillColor);
                            c.isFilled = chbIsFill.isSelected();
                            myArea.addShape(c);

                            p1 = p2 = null;
                        }
                        break;

                    case Square:

                        break;
                    case Oval:

                        break;
                    case Triangle:

                        break;
                    case Polygon:

//                        pArr.clear();
                        break;
                }
                break;
            case Move:
                if (p1 == null) {
                    p1 = new Point(evt.getX(), evt.getY());
                } else {
                    p2 = new Point(evt.getX(), evt.getY());
                    myArea.moveShape(p1, p2.getX() - p1.getX(), p2.getY() - p1.getY());
                    p1 = p2 = null;
                }
                break;
            case Erase:
                p1 = new Point(evt.getX(), evt.getY());
                Shape s = myArea.getShapeByPoint(p1);
                if (s != null) {
                    myArea.removeShape(myArea.indexOf(s));
                    myArea.reDrawAll();
                }

                break;
            case ZoomIn:
                break;
            case ZoomOut:
                break;

        }

    }//GEN-LAST:event_paintPanelMouseClicked

    private void btnRectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRectActionPerformed
        curAction = ActionType.Draw;
        curShape = ShapeTypes.Rectangle;
        p1 = p2 = p3 = null;
        pArr.clear();
    }//GEN-LAST:event_btnRectActionPerformed

    private void btnCircleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCircleActionPerformed
        curAction = ActionType.Draw;
        curShape = ShapeTypes.Circle;
        p1 = p2 = p3 = null;
        pArr.clear();
    }//GEN-LAST:event_btnCircleActionPerformed

    private void btnMoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoveActionPerformed
        curAction = ActionType.Move;
        pArr.clear();
        p1 = p2 = p3 = null;
    }//GEN-LAST:event_btnMoveActionPerformed

    private void btnEraseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEraseActionPerformed
        curAction = ActionType.Erase;
        pArr.clear();
        p1 = p2 = p3 = null;
    }//GEN-LAST:event_btnEraseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyPaint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyPaint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyPaint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyPaint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyPaint().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // Generated using JFormDesigner Evaluation license - Parsa Es
    private JPanel paintPanel;
    private JButton btnLine;
    private JButton btnRect;
    private JButton btnCircle;
    private JButton btnMove;
    private JButton btnErase;
    private JCheckBox chbIsFill;
    private JButton button1;
    private JButton button2;
    private JButton button3;
    private JButton button4;
    private JButton button5;
    private JButton button6;
    // End of variables declaration//GEN-END:variables
}
